{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  props: {\n    navTitle: String,\n    navSubTitle: String\n  },\n\n  data() {\n    return {\n      allCountries: null,\n      countries: []\n    };\n  },\n\n  beforeMount() {\n    this.search();\n  },\n\n  methods: {\n    searchResults(searchString) {\n      axios.get(searchString).then(response => {\n        this.countries = response.data;\n        this.allCountries = [];\n\n        for (let i = 0; i < 10 && i < this.countries.length; i++) {\n          this.allCountries.push(this.countries[i]);\n        }\n      });\n      return this.allCountries;\n    },\n\n    search() {\n      if (this.$refs.input.value == \"\" || \"\") {\n        this.searchResults(`https://restcountries.com/v3.1/all`);\n      } else {\n        this.searchResults(`https://restcountries.com/v3.1/name/${this.$refs.input.value}`);\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAOA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe;EACbC,KAAK,EAAE;IACLC,QAAQ,EAAEC,MADL;IAELC,WAAW,EAAED;EAFR,CADM;;EAKbE,IAAI,GAAG;IACL,OAAO;MACLC,YAAY,EAAE,IADT;MAELC,SAAS,EAAE;IAFN,CAAP;EAID,CAVY;;EAWbC,WAAW,GAAG;IACZ,KAAKC,MAAL;EACD,CAbY;;EAcbC,OAAO,EAAE;IACPC,aAAa,CAACC,YAAD,EAAe;MAC1BZ,KAAK,CAACa,GAAN,CAAUD,YAAV,EAAwBE,IAAxB,CAA8BC,QAAD,IAAc;QACzC,KAAKR,SAAL,GAAiBQ,QAAQ,CAACV,IAA1B;QACA,KAAKC,YAAL,GAAoB,EAApB;;QACA,KAAK,IAAIU,IAAI,CAAb,EAAgBA,IAAI,EAAJ,IAAUA,IAAI,KAAKT,SAAL,CAAeU,MAA7C,EAAqDD,CAAC,EAAtD,EAA0D;UACxD,KAAKV,YAAL,CAAkBY,IAAlB,CAAuB,KAAKX,SAAL,CAAeS,CAAf,CAAvB;QACF;MACD,CAND;MAOA,OAAO,KAAKV,YAAZ;IACD,CAVM;;IAWPG,MAAM,GAAG;MACP,IAAI,KAAKU,KAAL,CAAWC,KAAX,CAAiBC,KAAjB,IAA0B,EAA1B,IAAgC,EAApC,EAAwC;QACtC,KAAKV,aAAL,CAAoB,oCAApB;MACF,CAFA,MAEO;QACL,KAAKA,aAAL,CACG,uCAAsC,KAAKQ,KAAL,CAAWC,KAAX,CAAiBC,KAAM,EADhE;MAGF;IACD;;EAnBM;AAdI,CAAf","names":["axios","props","navTitle","String","navSubTitle","data","allCountries","countries","beforeMount","search","methods","searchResults","searchString","get","then","response","i","length","push","$refs","input","value"],"sourceRoot":"","sources":["/Users/ilyamarvin/Documents/GitHub/country-vue/src/components/SearchBar.vue"],"sourcesContent":["<template>\n  <input type=\"text\" name=\"search\" id=\"search\" ref=\"input\" />\n  <button @click=\"search\">HA</button>\n  <p>{{ this.allCountries }}</p>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  props: {\n    navTitle: String,\n    navSubTitle: String,\n  },\n  data() {\n    return {\n      allCountries: null,\n      countries: [],\n    };\n  },\n  beforeMount() {\n    this.search();\n  },\n  methods: {\n    searchResults(searchString) {\n      axios.get(searchString).then((response) => {\n        this.countries = response.data;\n        this.allCountries = [];\n        for (let i = 0; i < 10 && i < this.countries.length; i++) {\n          this.allCountries.push(this.countries[i]);\n        }\n      });\n      return this.allCountries;\n    },\n    search() {\n      if (this.$refs.input.value == \"\" || \"\") {\n        this.searchResults(`https://restcountries.com/v3.1/all`);\n      } else {\n        this.searchResults(\n          `https://restcountries.com/v3.1/name/${this.$refs.input.value}`\n        );\n      }\n    },\n  },\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nnav {\n  display: block;\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  background: #081101;\n}\n\na {\n  display: flex;\n  align-self: flex-start;\n  text-decoration: none;\n  text-align: left;\n}\n\na > span {\n  color: #aceca1;\n  font-size: 1.35rem;\n  font-weight: 600;\n  padding: 0.85rem;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}