{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-0eca37cb\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  key: 0,\n  class: \"item error\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"No results found!\", -1\n/* HOISTED */\n));\n\nconst _hoisted_3 = [_hoisted_2];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.input = $event),\n    placeholder: \"Search...\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $setup.input]]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.filteredList(), fruit => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"item fruit\",\n      key: fruit\n    }, [_createElementVNode(\"p\", null, _toDisplayString(fruit), 1\n    /* TEXT */\n    )]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  )), $setup.input && !$setup.filteredList().length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, _hoisted_3)) : _createCommentVNode(\"v-if\", true)], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;;;;;EAKOA,KAAK,EAAC;;;gEACTC,oBAAwB,GAAxB,EAAwB,IAAxB,EAAG,mBAAH,EAAoB;AAAA;AAApB;;oBAAAC;;6EALFD,oBAA6D,OAA7D,EAA6D;IAAtDE,IAAI,EAAC,MAAiD;+DAAjCC,eAAKC,OAA4B;IAA1BC,WAAW,EAAC;EAAc,CAA7D;;EAAA,kBAA4BF,oCAC5BG,oBAEMC,SAFN,EAEM,IAFN,EAEMC,YAFkCL,qBAElC,EAFyBM,KAAqB,IAAhB;yBAApCH,oBAEM,KAFN,EAEM;MAFDP,KAAK,EAAC,YAEL;MAFmDW,GAAG,EAAED;IAExD,CAFN,GACET,oBAAkB,GAAlB,EAAkB,IAAlB,EAAkBW,iBAAZF,KAAY,CAAlB,EAAW;IAAA;IAAX,EADF;GAEM,CAFN;;EAAA,IAG8BN,gBAAK,CAAKA,sBAAeS,wBAAvDN,oBAEM,KAFN,cAEMO,UAFN","names":["class","_createElementVNode","_hoisted_2","type","$setup","$event","placeholder","_createElementBlock","_Fragment","_renderList","fruit","key","_toDisplayString","length","_hoisted_3"],"sourceRoot":"","sources":["/Users/ilyamarvin/Documents/GitHub/country-vue/src/components/SearchBar.vue"],"sourcesContent":["<template>\n  <input type=\"text\" v-model=\"input\" placeholder=\"Search...\" />\n  <div class=\"item fruit\" v-for=\"fruit in filteredList()\" :key=\"fruit\">\n    <p>{{ fruit }}</p>\n  </div>\n  <div class=\"item error\" v-if=\"input && !filteredList().length\">\n    <p>No results found!</p>\n  </div>\n</template>\n\n<script setup>\nimport { ref } from \"vue\";\nlet input = ref(\"\");\nconst fruits = [\"apple\", \"banana\", \"orange\"];\nfunction filteredList() {\n  return fruits.filter((fruit) =>\n    fruit.toLowerCase().includes(input.value.toLowerCase())\n  );\n}\n</script>\n\n<!-- export default {\n  props: {\n    navTitle: String,\n    navSubTitle: String,\n  },\n}; -->\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nnav {\n  display: block;\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  background: #081101;\n}\n\na {\n  display: flex;\n  align-self: flex-start;\n  text-decoration: none;\n  text-align: left;\n}\n\na > span {\n  color: #aceca1;\n  font-size: 1.35rem;\n  font-weight: 600;\n  padding: 0.85rem;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}