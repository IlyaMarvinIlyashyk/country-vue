{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"card\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.input = $event),\n    placeholder: \"Search...\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.input]]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.allCountries, country => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: country.name\n    }, [_createElementVNode(\"p\", null, _toDisplayString(country.name.common), 1\n    /* TEXT */\n    )]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  )), _createCommentVNode(\" <div class=\\\"item error\\\" v-if=\\\"input\\\">\\n    <p>No results found!</p>\\n  </div> \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.allCountries, country => {\n    return _openBlock(), _createElementBlock(\"ul\", {\n      key: country.name\n    }, [_createElementVNode(\"li\", null, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"h3\", null, _toDisplayString(country.name.common), 1\n    /* TEXT */\n    ), _createElementVNode(\"h4\", null, _toDisplayString(country.name.official), 1\n    /* TEXT */\n    ), _createElementVNode(\"span\", null, _toDisplayString(country.flag), 1\n    /* TEXT */\n    )])])]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;EAWWA,KAAK,EAAC;;;6EAVfC,oBAA6D,OAA7D,EAA6D;IAAtDC,IAAI,EAAC,MAAiD;+DAAjCC,cAAKC,OAA4B;IAA1BC,WAAW,EAAC;EAAc,CAA7D;;EAAA,kBAA4BF,mCAC5BG,oBAEMC,SAFN,EAEM,IAFN,EAEMC,YAFiBL,kBAEjB,EAFMM,OAAuB,IAAhB;yBAAnBH,oBAEM,KAFN,EAEM;MAFgCI,GAAG,EAAED,OAAO,CAACE;IAE7C,CAFN,GACEV,oBAAgC,GAAhC,EAAgC,IAAhC,EAAgCW,iBAA1BH,OAAO,CAACE,IAAR,CAAaE,MAAa,CAAhC,EAAyB;IAAA;IAAzB,EADF;GAEM,CAFN;;EAAA,IAGAC,+HAIAR,oBAQKC,SARL,EAQK,IARL,EAQKC,YARiBL,kBAQjB,EARMM,OAAuB,IAAhB;yBAAlBH,oBAQK,IARL,EAQK;MARsCI,GAAG,EAAED,OAAO,CAACE;IAQnD,CARL,GACEV,oBAMK,IANL,EAMK,IANL,EAMK,CALHA,oBAIM,KAJN,cAIM,CAHJA,oBAAkC,IAAlC,EAAkC,IAAlC,EAAkCW,iBAA3BH,OAAO,CAACE,IAAR,CAAaE,MAAc,CAAlC,EAA0B;IAAA;IAA1B,CAGI,EAFJZ,oBAAoC,IAApC,EAAoC,IAApC,EAAoCW,iBAA7BH,OAAO,CAACE,IAAR,CAAaI,QAAgB,CAApC,EAA4B;IAAA;IAA5B,CAEI,EADJd,oBAA+B,MAA/B,EAA+B,IAA/B,EAA+BW,iBAAtBH,OAAO,CAACO,IAAc,CAA/B,EAAqB;IAAA;IAArB,CACI,CAJN,CAKG,CANL,EADF;GAQK,CARL;;EAAA","names":["class","_createElementVNode","type","$data","$event","placeholder","_createElementBlock","_Fragment","_renderList","country","key","name","_toDisplayString","common","_createCommentVNode","official","flag"],"sourceRoot":"","sources":["/Users/ilyamarvin/Documents/GitHub/country-vue/src/components/SearchResults.vue"],"sourcesContent":["<template>\n  <input type=\"text\" v-model=\"input\" placeholder=\"Search...\" />\n  <div v-for=\"country in allCountries\" :key=\"country.name\">\n    <p>{{ country.name.common }}</p>\n  </div>\n  <!-- <div class=\"item error\" v-if=\"input\">\n    <p>No results found!</p>\n  </div> -->\n\n  <ul v-for=\"country in allCountries\" v-bind:key=\"country.name\">\n    <li>\n      <div class=\"card\">\n        <h3>{{ country.name.common }}</h3>\n        <h4>{{ country.name.official }}</h4>\n        <span>{{ country.flag }}</span>\n      </div>\n    </li>\n  </ul>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport { ref } from \"vue\";\n\nexport default {\n  data() {\n    return {\n      countryNames: [],\n      allCountries: [],\n      input: ref(\"\"),\n    };\n  },\n  mounted() {\n    axios.get(\"https://restcountries.com/v3.1/all\").then((response) => {\n      this.countries = response.data;\n      for (let i = 0; i < 10 && i < this.countries.length; i++) {\n        this.allCountries.push(this.countries[i]);\n        // console.log(this.allCountries);\n      }\n    });\n    return this.allCountries;\n  },\n  methods: {\n    filterCountries() {\n      return this.allCountries((country) => {\n        country.toLowerCase().includes(this.input.value.toLowerCase());\n      });\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}