{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-0eca37cb\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  type: \"text\",\n  name: \"search\",\n  id: \"search\",\n  ref: \"input\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"input\", _hoisted_1, null, 512\n  /* NEED_PATCH */\n  ), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.search && $options.search(...args))\n  }, \"HA\"), _createElementVNode(\"p\", null, _toDisplayString(this.allCountries), 1\n  /* TEXT */\n  )], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;;;;EACSA,IAAI,EAAC;EAAOC,IAAI,EAAC;EAASC,EAAE,EAAC;EAASC,GAAG,EAAC;;;6DAAjDC,oBAA2D,OAA3D,cAA2D,IAA3D,EAA2D;EAAA;EAA3D,GACAA,oBAAmC,QAAnC,EAAmC;IAA1BC,OAAK,yCAAEC,2CAAF;EAAqB,CAAnC,EAAwB,IAAxB,GACAF,oBAA8B,GAA9B,EAA8B,IAA9B,EAA8BG,sBAAnBC,YAAmB,CAA9B,EAAuB;EAAA;EAAvB","names":["type","name","id","ref","_createElementVNode","onClick","$options","_toDisplayString","allCountries"],"sourceRoot":"","sources":["/Users/ilyamarvin/Documents/GitHub/country-vue/src/components/SearchBar.vue"],"sourcesContent":["<template>\n  <input type=\"text\" name=\"search\" id=\"search\" ref=\"input\" />\n  <button @click=\"search\">HA</button>\n  <p>{{ this.allCountries }}</p>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  props: {\n    navTitle: String,\n    navSubTitle: String,\n  },\n  data() {\n    return {\n      allCountries: null,\n      countries: [],\n    };\n  },\n  mount() {\n    this.search(true);\n  },\n  methods: {\n    searchResults(searchString) {\n      axios.get(searchString).then((response) => {\n        this.countries = response.data;\n        this.allCountries = [];\n        for (let i = 0; i < 10 && i < this.countries.length; i++) {\n          this.allCountries.push(this.countries[i]);\n        }\n      });\n      return this.allCountries;\n    },\n    search() {\n      if (this.$refs.input.value == \"\" || this.loading === true) {\n        this.searchResults(`https://restcountries.com/v3.1/all`);\n      } else {\n        this.searchResults(\n          `https://restcountries.com/v3.1/name/${this.$refs.input.value}`\n        );\n      }\n    },\n  },\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nnav {\n  display: block;\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  background: #081101;\n}\n\na {\n  display: flex;\n  align-self: flex-start;\n  text-decoration: none;\n  text-align: left;\n}\n\na > span {\n  color: #aceca1;\n  font-size: 1.35rem;\n  font-weight: 600;\n  padding: 0.85rem;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}